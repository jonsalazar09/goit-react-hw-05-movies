{"version":3,"file":"static/js/415.6db11c23.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","helpers/api.js","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst LoadMoreBtn = styled.button`\n  display: block;\n  min-width: 250px;\n\n  margin: 0 auto;\n  padding: 8px 0;\n\n  border: 2px solid #0967c2;\n  border-radius: 20px;\n  background-color: #e1eefd;\n  text-align: center;\n\n  color: #0967c2;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: calc(22 / 18);\n  letter-spacing: 0.02em;\n\n  transition: all var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n\n    color: #fafafa;\n    background-color: #0967c2;\n    box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport { LoadMoreBtn };\n","import PropTypes from 'prop-types';\n\nimport { LoadMoreBtn } from 'components/Button/Button.styled';\n\nconst Button = ({ text, onClickBtn }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={onClickBtn}>\n      {text}\n    </LoadMoreBtn>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClickBtn: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst LoaderWrap = styled.div`\n  position: fixed;\n  top: calc(50% - 48px);\n  left: calc(50% - 48px);\n  z-index: 1100;\n`;\n\nexport { LoaderWrap };\n","import { RotatingLines } from 'react-loader-spinner';\n\nimport { LoaderWrap } from 'components/Loader/Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderWrap>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 250px;\n  height: 100%;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n  overflow: hidden;\n\n  background-color: #f3f6f9;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: all var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus {\n    color: #0967c2;\n    background-color: #e1eefd;\n    border-color: #0967c2;\n    box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nconst Thumb = styled.div`\n  max-width: 250px;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n\n  transition: transform var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nconst TextWrap = styled.div`\n  flex-grow: 1;\n\n  padding: 8px;\n`;\n\nconst Name = styled.h2`\n  color: #112236;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: calc(24 / 20);\n  letter-spacing: 0.02em;\n`;\n\nexport { Wrapper, Thumb, Image, TextWrap, Name };\n","import { useLocation, Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport noImageIcon from '../../icons/noImageIcon-250x375.png';\n\nimport {\n  Wrapper,\n  Thumb,\n  Image,\n  TextWrap,\n  Name,\n} from 'components/MoviesGalleryItem/MoviesGalleryItem.styled';\n\nconst MoviesGalleryItem = ({ element: { id, poster_path, title } }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Wrapper>\n          <Thumb>\n            {poster_path ? (\n              <Image\n                loading=\"lazy\"\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={title}\n              />\n            ) : (\n              <Image src={noImageIcon} alt={title} />\n            )}\n          </Thumb>\n          <TextWrap>\n            <Name>{title}</Name>\n          </TextWrap>\n        </Wrapper>\n      </Link>\n    </>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  element: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MoviesGalleryItem;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: grid;\n  justify-items: center;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 39px;\n\n  margin-bottom: 32px;\n  padding: 0;\n`;\n\nexport { List };\n","import PropTypes from 'prop-types';\n\nimport MovieGalleryItem from 'components/MoviesGalleryItem/MoviesGalleryItem';\n\nimport { List } from 'components/MoviesGallery/MoviesGallery.styled';\n\nconst MoviesGallery = ({ data }) => {\n  return (\n    <List>\n      {data.map(element => (\n        <li key={element.id}>\n          <MovieGalleryItem element={element} />\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesGallery.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesGallery;\n","import styled from 'styled-components';\n\nconst SectionWrapper = styled.section`\n  padding: 20px 0;\n`;\n\nconst Container = styled.div`\n  max-width: 1440px;\n  padding-right: 16px;\n  padding-left: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n  color: #112236;\n  text-shadow: 2px 4px 4px rgb(44 101 158);\n  font-size: 32px;\n  line-height: calc(36 / 32);\n  letter-spacing: 0.02em;\n`;\n\nexport { SectionWrapper, Container, Title };\n","import PropTypes from 'prop-types';\n\nimport {\n  SectionWrapper,\n  Container,\n  Title,\n} from 'components/Section/Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </SectionWrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n// const API_KEY = '96335405b345233f2a3dbecabd0603e6'; //?\nconst options = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NjMzNTQwNWIzNDUyMzNmMmEzZGJlY2FiZDA2MDNlNiIsInN1YiI6IjY0YTMwMjdiZTlkYTY5MDBhZTJmMTRmNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Z-JNYq0lLf2QZFKI9PWQ6B2ydwjA4oq3z-bATNKk5WQ',\n  },\n};\n\nconst fetchTrendMovies = async currentPage => {\n  const endpoint = '/trending/movie/day';\n\n  const params = new URLSearchParams({\n    page: currentPage,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nconst fetchMovies = async (query, currentPage) => {\n  const endpoint = '/search/movie';\n\n  const params = new URLSearchParams({\n    query: query,\n    include_adult: 'false',\n    page: currentPage,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const endpoint = `/movie/${movieId}`;\n\n  const response = await axios.request(`${BASE_URL}${endpoint}`, options);\n\n  return response;\n};\n\nconst fetchMovieCast = async movieId => {\n  const endpoint = `/movie/${movieId}/credits`;\n\n  const response = await axios.request(`${BASE_URL}${endpoint}`, options);\n\n  return response;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const endpoint = `/movie/${movieId}/reviews`;\n\n  const params = new URLSearchParams({\n    page: 1,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nexport {\n  fetchTrendMovies,\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n","import { useState, useEffect } from 'react';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nimport { fetchTrendMovies } from 'helpers/api';\n\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport Section from 'components/Section/Section';\nimport Loader from 'components/Loader/Loader';\nimport Button from 'components/Button/Button';\n\nconst Home = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendMoviesData = async () => {\n      setIsLoading(true);\n\n      try {\n        const {\n          data: { results, total_pages },\n        } = await fetchTrendMovies(currentPage);\n        getTrendMovies(results, total_pages);\n      } catch (error) {\n        console.log('ERROR', error); //???\n        Report.failure('ERROR', `${error.message}`, 'Close');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const getTrendMovies = (results, total_pages) => {\n      if (results.length !== 0) {\n        setMovies(prevState => [...prevState, ...results]);\n        setTotalPages(total_pages);\n      } else {\n        Notify.failure(\n          'Sorry, there are no movies in trend. Please try later.'\n        );\n      }\n    };\n\n    fetchTrendMoviesData();\n  }, [currentPage]);\n\n  const onLoadMore = () => {\n    setCurrentPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      <Section title=\"Trending today\">\n        {movies.length > 0 && (\n          <>\n            <MoviesGallery data={movies} />\n            {currentPage < totalPages && !isLoading && (\n              <Button text=\"Load more\" onClickBtn={onLoadMore} />\n            )}\n          </>\n        )}\n      </Section>\n\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["LoadMoreBtn","styled","text","onClickBtn","type","onClick","LoaderWrap","strokeColor","strokeWidth","animationDuration","width","visible","Wrapper","Thumb","Image","TextWrap","Name","element","id","poster_path","title","location","useLocation","to","state","from","loading","src","alt","noImageIcon","List","data","map","SectionWrapper","Container","Title","children","BASE_URL","options","method","params","language","headers","accept","Authorization","fetchTrendMovies","currentPage","URLSearchParams","page","axios","response","fetchMovies","query","include_adult","fetchMovieDetails","movieId","endpoint","fetchMovieCast","fetchMovieReviews","useState","setCurrentPage","totalPages","setTotalPages","movies","setMovies","isLoading","setIsLoading","useEffect","fetchTrendMoviesData","results","total_pages","getTrendMovies","console","log","Report","message","length","prevState","Notify"],"sourceRoot":""}