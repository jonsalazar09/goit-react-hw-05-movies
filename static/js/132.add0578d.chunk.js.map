{"version":3,"file":"static/js/132.add0578d.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/ReviewsGalleryItem/ReviewsGalleryItem.jsx","components/ReviewsGallery/ReviewsGallery.styled.jsx","components/ReviewsGallery/ReviewsGallery.jsx","components/Reviews/Reviews.jsx","components/ReviewsGalleryItem/ReviewsGalleryItem.styled.jsx","helpers/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst LoaderWrap = styled.div`\n  position: fixed;\n  top: calc(50% - 48px);\n  left: calc(50% - 48px);\n  z-index: 1100;\n`;\n\nexport { LoaderWrap };\n","import { RotatingLines } from 'react-loader-spinner';\n\nimport { LoaderWrap } from 'components/Loader/Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderWrap>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  max-width: 1408px;\n\n  margin-bottom: 20px;\n  padding: 12px;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n\n  background-color: #f3f6f9;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  @media screen and (max-width: 767.99px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nconst Thumb = styled.div`\n  max-width: 500px;\n  width: 100%;\n  border-radius: 4px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    min-width: 375px;\n  }\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst TextWrap = styled.div``;\nconst Name = styled.h2`\n  margin-bottom: 32px;\n  color: #112236;\n  text-shadow: 2px 4px 4px rgb(44 101 158);\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: calc(32 / 28);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.7vw;\n  }\n`;\nconst Span = styled.span`\n  font-style: italic;\n`;\n\nconst TextTitle = styled.h3`\n  margin-bottom: 32px;\n\n  color: #112236;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: calc(28 / 24);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.7vw;\n  }\n`;\n\nconst Text = styled.p`\n  margin-bottom: 44px;\n\n  color: #516174;\n  font-size: 20px;\n  line-height: calc(24 / 20);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.18vw;\n\n    hyphens: auto;\n  }\n`;\n\nexport { Wrapper, Thumb, Image, TextWrap, Name, Span, TextTitle, Text };\n","import PropTypes from 'prop-types';\n\nimport userAvatarIcon from '../../icons/userAvatarIcon-512x512.png';\n\nimport {\n  Wrapper,\n  Thumb,\n  Image,\n  TextWrap,\n  Name,\n  Text,\n} from 'components/ReviewsGalleryItem/ReviewsGalleryItem.styled';\n\nconst ReviewsGalleryItem = ({ element: { author, content } }) => {\n  return (\n    <>\n      <Wrapper>\n        <Thumb>\n          <Image src={userAvatarIcon} alt={author} />\n        </Thumb>\n        <TextWrap>\n          <Name>{author}</Name>\n          <Text>{content}</Text>\n        </TextWrap>\n      </Wrapper>\n    </>\n  );\n};\n\nReviewsGalleryItem.propTypes = {\n  element: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ReviewsGalleryItem;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, max(1408px, 1fr));\n  grid-gap: 16px;\n\n  padding: 0;\n`;\n\nexport { List };\n","import PropTypes from 'prop-types';\n\nimport ReviewsGalleryItem from 'components/ReviewsGalleryItem';\n\nimport { List } from 'components/ReviewsGallery/ReviewsGallery.styled';\n\nconst ReviewsGallery = ({ data }) => {\n  return (\n    <List>\n      {data.map(element => (\n        <li key={element.id}>\n          <ReviewsGalleryItem element={element} />\n        </li>\n      ))}\n    </List>\n  );\n};\n\nReviewsGallery.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default ReviewsGallery;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nimport { fetchMovieReviews } from 'helpers/api';\n\nimport Loader from 'components/Loader/Loader';\nimport ReviewsGallery from 'components/ReviewsGallery';\n\nimport { Text } from 'components/MovieInfo/MovieInfo.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const fetchMovieReviewsData = async () => {\n      setIsLoading(true);\n\n      try {\n        const {\n          data: { results },\n        } = await fetchMovieReviews(movieId);\n\n        getMovieReviews(results);\n      } catch (error) {\n        console.log('ERROR', error); //???\n        Report.failure('ERROR', `${error.message}`, 'Close');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const getMovieReviews = results => {\n      if (results.length !== 0) {\n        setMovieReviews(results);\n      } else {\n        Notify.failure('Sorry, there are no movie reviews.');\n      }\n    };\n\n    fetchMovieReviewsData();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews.length !== 0 ? (\n        <ReviewsGallery data={movieReviews} />\n      ) : (\n        <Text>\n          We don't have any reviews for this movie. But you can keep yours...\n        </Text>\n      )}\n\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  max-width: 1408px;\n  width: 100%;\n  padding: 12px;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n\n  background-color: #f3f6f9;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  @media screen and (max-width: 532px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nconst Thumb = styled.div`\n  overflow: hidden;\n\n  min-width: 125px;\n  height: 125px;\n  background-color: #fafafa;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 50%;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst TextWrap = styled.div``;\n\nconst Name = styled.h2`\n  margin-bottom: 8px;\n  color: #112236;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: calc(22 / 18);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.7vw;\n  }\n`;\n\nconst Text = styled.p`\n  color: #516174;\n\n  font-size: 16px;\n  line-height: calc(20 / 16);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.18vw;\n\n    hyphens: auto;\n  }\n`;\n\nexport { Wrapper, Thumb, Image, TextWrap, Name, Text };\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n// const API_KEY = '96335405b345233f2a3dbecabd0603e6'; //?\nconst options = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NjMzNTQwNWIzNDUyMzNmMmEzZGJlY2FiZDA2MDNlNiIsInN1YiI6IjY0YTMwMjdiZTlkYTY5MDBhZTJmMTRmNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Z-JNYq0lLf2QZFKI9PWQ6B2ydwjA4oq3z-bATNKk5WQ',\n  },\n};\n\nconst fetchTrendMovies = async currentPage => {\n  const endpoint = '/trending/movie/day';\n\n  const params = new URLSearchParams({\n    page: currentPage,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nconst fetchMovies = async (query, currentPage) => {\n  const endpoint = '/search/movie';\n\n  const params = new URLSearchParams({\n    query: query,\n    include_adult: 'false',\n    page: currentPage,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const endpoint = `/movie/${movieId}`;\n\n  const response = await axios.request(`${BASE_URL}${endpoint}`, options);\n\n  return response;\n};\n\nconst fetchMovieCast = async movieId => {\n  const endpoint = `/movie/${movieId}/credits`;\n\n  const response = await axios.request(`${BASE_URL}${endpoint}`, options);\n\n  return response;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const endpoint = `/movie/${movieId}/reviews`;\n\n  const params = new URLSearchParams({\n    page: 1,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nexport {\n  fetchTrendMovies,\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n"],"names":["LoaderWrap","styled","strokeColor","strokeWidth","animationDuration","width","visible","Wrapper","Thumb","Image","TextWrap","Name","Span","TextTitle","Text","element","author","content","src","userAvatarIcon","alt","List","data","map","id","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieReviewsData","fetchMovieReviews","results","getMovieReviews","console","log","Report","message","length","Notify","Loader","BASE_URL","options","method","params","language","headers","accept","Authorization","fetchTrendMovies","currentPage","URLSearchParams","page","axios","response","fetchMovies","query","include_adult","fetchMovieDetails","endpoint","fetchMovieCast"],"sourceRoot":""}