{"version":3,"file":"static/js/185.2f19cb9b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/ReviewsGalleryItem/ReviewsGalleryItem.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","helpers/api.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieInfo/MovieInfo.jsx","components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst LoaderWrap = styled.div`\n  position: fixed;\n  top: calc(50% - 48px);\n  left: calc(50% - 48px);\n  z-index: 1100;\n`;\n\nexport { LoaderWrap };\n","import { RotatingLines } from 'react-loader-spinner';\n\nimport { LoaderWrap } from 'components/Loader/Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderWrap>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  max-width: 1408px;\n\n  margin-bottom: 20px;\n  padding: 12px;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n\n  background-color: #f3f6f9;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  @media screen and (max-width: 767.99px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nconst Thumb = styled.div`\n  max-width: 500px;\n  width: 100%;\n  border-radius: 4px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    min-width: 375px;\n  }\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst TextWrap = styled.div``;\nconst Name = styled.h2`\n  margin-bottom: 32px;\n  color: #112236;\n  text-shadow: 2px 4px 4px rgb(44 101 158);\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: calc(32 / 28);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.7vw;\n  }\n`;\nconst Span = styled.span`\n  font-style: italic;\n`;\n\nconst TextTitle = styled.h3`\n  margin-bottom: 32px;\n\n  color: #112236;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: calc(28 / 24);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.7vw;\n  }\n`;\n\nconst Text = styled.p`\n  margin-bottom: 44px;\n\n  color: #516174;\n  font-size: 20px;\n  line-height: calc(24 / 20);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.18vw;\n\n    hyphens: auto;\n  }\n`;\n\nexport { Wrapper, Thumb, Image, TextWrap, Name, Span, TextTitle, Text };\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  max-width: 1408px;\n  width: 100%;\n  padding: 12px;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n\n  background-color: #f3f6f9;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  @media screen and (max-width: 532px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nconst Thumb = styled.div`\n  overflow: hidden;\n\n  min-width: 125px;\n  height: 125px;\n  background-color: #fafafa;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 50%;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst TextWrap = styled.div``;\n\nconst Name = styled.h2`\n  margin-bottom: 8px;\n  color: #112236;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: calc(22 / 18);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.7vw;\n  }\n`;\n\nconst Text = styled.p`\n  color: #516174;\n\n  font-size: 16px;\n  line-height: calc(20 / 16);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.18vw;\n\n    hyphens: auto;\n  }\n`;\n\nexport { Wrapper, Thumb, Image, TextWrap, Name, Text };\n","import styled from 'styled-components';\n\nconst SectionWrapper = styled.section`\n  padding: 20px 0;\n`;\n\nconst Container = styled.div`\n  max-width: 1440px;\n  padding-right: 16px;\n  padding-left: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n  color: #112236;\n  text-shadow: 2px 4px 4px rgb(44 101 158);\n  font-size: 32px;\n  line-height: calc(36 / 32);\n  letter-spacing: 0.02em;\n`;\n\nexport { SectionWrapper, Container, Title };\n","import PropTypes from 'prop-types';\n\nimport {\n  SectionWrapper,\n  Container,\n  Title,\n} from 'components/Section/Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </SectionWrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n// const API_KEY = '96335405b345233f2a3dbecabd0603e6'; //?\nconst options = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NjMzNTQwNWIzNDUyMzNmMmEzZGJlY2FiZDA2MDNlNiIsInN1YiI6IjY0YTMwMjdiZTlkYTY5MDBhZTJmMTRmNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Z-JNYq0lLf2QZFKI9PWQ6B2ydwjA4oq3z-bATNKk5WQ',\n  },\n};\n\nconst fetchTrendMovies = async currentPage => {\n  const endpoint = '/trending/movie/day';\n\n  const params = new URLSearchParams({\n    page: currentPage,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nconst fetchMovies = async (query, currentPage) => {\n  const endpoint = '/search/movie';\n\n  const params = new URLSearchParams({\n    query: query,\n    include_adult: 'false',\n    page: currentPage,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const endpoint = `/movie/${movieId}`;\n\n  const response = await axios.request(`${BASE_URL}${endpoint}`, options);\n\n  return response;\n};\n\nconst fetchMovieCast = async movieId => {\n  const endpoint = `/movie/${movieId}/credits`;\n\n  const response = await axios.request(`${BASE_URL}${endpoint}`, options);\n\n  return response;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const endpoint = `/movie/${movieId}/reviews`;\n\n  const params = new URLSearchParams({\n    page: 1,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nexport {\n  fetchTrendMovies,\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 35vw;\n  max-width: 150px;\n  margin-bottom: 20px;\n\n  padding: 4px 0;\n  border: 2px solid #e5eaf1;\n  border-radius: 20px;\n\n  background-color: #f3f6f9;\n\n  color: #112236;\n\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: calc(22 / 18);\n  letter-spacing: 0.02em;\n\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: all var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: #0967c2;\n    background-color: #e1eefd;\n    border-color: #0967c2;\n    box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport { StyledLink };\n","import { HiArrowLeft } from 'react-icons/hi';\n\nimport { StyledLink } from 'components/BackLink/BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import PropTypes from 'prop-types';\n\nimport noImageIcon from '../../icons/noImageIcon-500x750.png';\n\nimport {\n  Wrapper,\n  Thumb,\n  Image,\n  TextWrap,\n  Name,\n  Span,\n  TextTitle,\n  Text,\n} from 'components/MovieInfo/MovieInfo.styled';\n\nconst MovieInfo = ({\n  details: { title, overview, poster_path, release_date, genres, vote_average },\n}) => {\n  const date = new Date(release_date).getFullYear();\n  const score = Math.round(vote_average * 10);\n  const movieGenres = genres.map(genre => genre.name).join(' / ');\n\n  return (\n    <>\n      <Wrapper>\n        <Thumb>\n          {poster_path ? (\n            <Image\n              loading=\"lazy\"\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n          ) : (\n            <Image src={noImageIcon} alt={title} />\n          )}\n        </Thumb>\n        <TextWrap>\n          <Name>\n            {title}\n            <Span> ({date})</Span>\n          </Name>\n          <Text>User Score: {score}%</Text>\n          <TextTitle>Overview</TextTitle>\n          <Text>{overview ? overview : 'No overview'}</Text>\n          <TextTitle>Genres</TextTitle>\n          <Text>{genres ? movieGenres : 'No information'}</Text>\n        </TextWrap>\n      </Wrapper>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  details: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst TextTitle = styled.h3`\n  margin-bottom: 20px;\n\n  color: #112236;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: calc(28 / 24);\n  letter-spacing: 0.02em;\n\n  @media screen and (max-width: 382px) {\n    font-size: 4.7vw;\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n  gap: 40px;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  display: block;\n  width: 35vw;\n\n  max-width: 150px;\n  padding: 8px 0;\n  border: 2px solid #e5eaf1;\n  border-radius: 23px;\n\n  background-color: #f3f6f9;\n\n  color: #112236;\n\n  text-align: center;\n  font-weight: 500;\n  font-size: 22px;\n  line-height: calc(24 / 20);\n  letter-spacing: 0.02em;\n\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: all var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: #0967c2;\n    background-color: #e1eefd;\n    border-color: #0967c2;\n    box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport { TextTitle, List, StyledNavLink };\n","import { TextTitle, List, StyledNavLink } from './AdditionalInfo.styled';\n\nconst AdditionalInfo = () => {\n  return (\n    <>\n      <div>\n        <TextTitle>Additional information</TextTitle>\n        <List>\n          <li>\n            <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n          </li>\n          <li>\n            <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n          </li>\n        </List>\n      </div>\n    </>\n  );\n};\n\nexport default AdditionalInfo;\n","import { useState, useRef, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nimport { fetchMovieDetails } from 'helpers/api';\n\nimport Section from 'components/Section/Section';\nimport Loader from 'components/Loader/Loader';\nimport BackLink from 'components/BackLink';\nimport MovieInfo from 'components/MovieInfo';\nimport AdditionalInfo from 'components/AdditionalInfo';\n\nimport { Text } from 'components/ReviewsGalleryItem/ReviewsGalleryItem.styled';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const fetchMovieDetailsData = async () => {\n      setIsLoading(true);\n\n      try {\n        const { data } = await fetchMovieDetails(movieId);\n\n        getDetails(data);\n      } catch (error) {\n        console.log('ERROR', error); //???\n        Report.failure('ERROR', `${error.message}`, 'Close');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const getDetails = data => {\n      if (data.length !== 0) {\n        setDetails(data);\n      } else {\n        Notify.failure('Sorry, there are no movie details.');\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  return (\n    <>\n      <Section>\n        <BackLink to={backLinkLocation.current}>Go back</BackLink>\n\n        {details.length !== 0 && <MovieInfo details={details} />}\n\n        <AdditionalInfo />\n      </Section>\n      <Section>\n        <Suspense fallback={<Text>Loading...</Text>}>\n          <Outlet />\n        </Suspense>\n      </Section>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["LoaderWrap","styled","strokeColor","strokeWidth","animationDuration","width","visible","Wrapper","Thumb","Image","TextWrap","Name","Span","TextTitle","Text","SectionWrapper","Container","Title","title","children","BASE_URL","options","method","params","language","headers","accept","Authorization","fetchTrendMovies","currentPage","URLSearchParams","page","axios","response","fetchMovies","query","include_adult","fetchMovieDetails","movieId","endpoint","fetchMovieCast","fetchMovieReviews","StyledLink","Link","to","size","details","overview","poster_path","release_date","genres","vote_average","date","Date","getFullYear","score","Math","round","movieGenres","map","genre","name","join","loading","src","alt","noImageIcon","List","StyledNavLink","NavLink","useState","setDetails","isLoading","setIsLoading","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchMovieDetailsData","data","getDetails","console","log","Report","message","length","Notify","Section","current","Suspense","fallback","Loader"],"sourceRoot":""}